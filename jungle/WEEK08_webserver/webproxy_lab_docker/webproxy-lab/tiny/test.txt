문제 1. RFC 2616의 HTTP/1.1표준을 참고해서 여러분의 사용하는 브라우저에서 보낸 HTTP요청 각각의 헤더가 갖는 의미를 정리하시오. (RFC 2616은 www.rfc-editor.org/rfc.html에서 볼수있다.)

1. Host: localhost:8080

RFC 2616에서 정의된 필수 헤더로, 요청하는 서버의 호스트명과 포트를 지정합니다 IETFIETF
HTTP/1.1에서는 반드시 포함되어야 하는 헤더입니다

2. User-Agent: Mozilla/5.0 (...)

클라이언트 소프트웨어의 종류, 운영체제, 소프트웨어 버전 등을 서버에 알려주는 헤더 RFC EditorMDN Web Docs
서버가 클라이언트에 맞는 적절한 응답을 제공하기 위해 사용됩니다

3. Accept: image/avif,image/webp,image/apng...

클라이언트가 응답으로 받을 수 있는 미디어 타입들을 명시하는 헤더 HTTP/1.1: Header Field Definitions
여기서는 이미지 형식들을 우선순위와 함께 지정하고 있습니다

4. Referer: http://localhost:8080/

현재 요청이 어떤 페이지로부터 시작되었는지를 나타내는 헤더 RFC 7231: Hypertext Transfer Protocol (HTTP/1.1): Semantics and Content
보안상 이유로 때때로 차단되거나 수정될 수 있습니다

5. Connection: keep-alive

HTTP/1.1에서 연결 관리 방식을 지정하는 헤더 RFC 2616 - Hypertext Transfer Protocol -- HTTP/1.1
keep-alive는 연결을 유지하여 여러 요청을 처리하겠다는 의미입니다

최신 보안/브라우저 관련 헤더들 (RFC 2616 이후 추가):
6. sec-ch-ua 관련 헤더들

User-Agent Client Hints의 일부로, 브라우저 브랜드 정보와 플랫폼 정보를 제공하는 현대적인 헤더들 Sec-CH-UA header - HTTP | MDN +2
보안을 위해 "fake" 브랜드도 포함할 수 있습니다

7. Sec-Fetch- 헤더들*

요청의 목적과 맥락을 명시하는 보안 관련 헤더들
서버가 요청의 의도를 파악하여 보안 정책을 적용할 수 있게 합니다


일반적인 요청 헤더:

Host: 대상 서버의 호스트명과 포트
User-Agent: 클라이언트 소프트웨어 정보
Accept: 클라이언트가 처리할 수 있는 미디어 타입
Accept-Language: 선호하는 언어
Accept-Encoding: 지원하는 인코딩 방식
Connection: 연결 관리 (close, keep-alive)
Content-Length: 요청 본문의 길이 (POST 등에서)
Content-Type: 요청 본문의 미디어 타입

문제 2. tiny를 확장해서 mp4비디오 파일을 처리하도록 하시오. 실제 브라우저를 사용해서 여러분의 결과를 체크하시오.

